---
- name: initial-setup-confirm
  stat:
    path: /opt/mattermost/config/config.json
  register: result # 存在していればresultという変数にTrueを、存在していなければFalseを格納します。

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/get_url_module.html
- name: download mattermost
  get_url:
    url: https://releases.mattermost.com/7.0.1/mattermost-7.0.1-linux-amd64.tar.gz
    dest: /tmp
  when: not result.stat.exists # resultがFalseの場合のみ処理を実行します。

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/unarchive_module.html
- name: unarchive mattermost-7.0.1-linux-amd64.tar.gz
  unarchive:
    src: /tmp/mattermost-7.0.1-linux-amd64.tar.gz
    dest: /opt   # /opt/mattermost ができる
    # remote_src: yes
    remote_src: true
  when: not result.stat.exists # resultがFalseの場合のみ処理を実行します。

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/group_module.html
- name: create group 'mattermost'
  group:
    name: mattermost

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/user_module.html
- name: Add the user 'mattermost'
  user:
    name: mattermost
    group: mattermost
    create_home: false
    # create_home: no

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
- name: mattermost directory permission
  file:
    path: "/opt/mattermost"
    state: directory
    owner: mattermost
    group: mattermost
    mode: '775'
    recurse: true
    # recurse: yes

- name: mattermost data directory created
  file:
    path: "/etc/mattermost/data"
    state: directory
    owner: mattermost
    group: mattermost
    mode: '775'

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/yum_module.html
- name: mysql intall
  yum:
    name: mysql
    state: present

# https://docs.mattermost.com/configure/configuation-in-mattermost-database.html
# - name: generate mattermost config file
#   copy:
#     src: config.json
#     dest: /opt/mattermost/config/config.json
#     owner: mattermost
#     group: mattermost
#     mode: '0664'

# https://docs.ansible.com/ansible/2.9_ja/modules/template_module.html#template-module
- name: generate mattermost config file from template
  template:
    src: config.json.j2
    dest: /opt/mattermost/config/config.json
    owner: mattermost
    group: mattermost
    mode: 0644

# - name: generate database setup script from template
#   template:
#     src: init_db.sh.j2
#     dest: /opt/mattermost/init_db.sh
#     owner: mattermost
#     group: mattermost
#     mode: 0755

# # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/stat_module.html
# - name: initial-db-setup-confirm
#   stat:
#     path: /opt/mattermost/.init_db.done
#   register: db_result # 存在していればdb_resultという変数にTrueを、存在していなければFalseを格納します。

# # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/shell_module.html
# - name: execute init_db.sh
#   shell: |
#     bash /opt/mattermost/init_db.sh
#     touch /opt/mattermost/.init_db.done
#   when: not db_result.stat.exists # resultがFalseの場合のみ処理を実行します。init_db.shを１回だけ実行するためのフラグです。

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
- name: generate mattermost.service file
  copy:
    src: mattermost.service
    dest: /etc/systemd/system/mattermost.service
    owner: root
    group: root
    mode: '0664'

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/systemd_module.html
- name: mattermost.service restart
  systemd:
    name: mattermost
    daemon_reload: true
    # daemon_reload: yes
    state: restarted
    enabled: yes
    # enabled: true

# https://docs.ansible.com/ansible/latest/collections/netapp/ontap/na_ontap_debug_module.html
- name: Setup is complete
  debug:
    msg: "See the link -> {{ alb_dns }}"
